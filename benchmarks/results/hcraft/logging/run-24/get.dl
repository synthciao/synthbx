.type username <: symbol
.type uid <: symbol
.type gid <: symbol
.type info <: symbol
.type homedir <: symbol
.type shell <: symbol
.type tty <: symbol
.type day <: symbol
.type date <: symbol

.decl user(v0: username, v1: uid, v2: gid, v3: info, v4: homedir, v5: shell)
.decl logged(v0: username, v1: tty, v2: day, v3: date)
.decl status(v0: tty)
.decl logging(v0: username, v1: uid, v2: info, v3: date)
.decl invent(v0: username, v1: tty, v2: date)
.decl inv0_logged(v0: username, v1: tty, v2: day, v3: date)
.decl inv0_status(v0: tty)

.input user
.input logged
.input status
.output logging
.output invent
.output inv0_logged
.output inv0_status

inv0_logged(v0, v1, v2, v3) :- logged(v0, v1, v2, v3), v1 = "console", v2 = "Sun".
inv0_logged(v0, v1, v2, v3) :- logged(v0, v1, v2, v3), v1 = "ttys000", v2 = "Sun".
inv0_logged(v0, v1, v2, v3) :- logged(v0, v1, v2, v3), v1 = "ttys001", v2 = "Sun".
logging(v4, v8, v7, v9) :- user(v4, v8, v2, v7, v6, v5), inv0_logged(v4, v1, v0, v9), !inv0_status(v1).
logging(v4, v8, v7, v9) :- user(v4, v8, v2, v7, v6, v5), inv0_logged(v4, v1, v0, v9).