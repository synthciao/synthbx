.type sname <: symbol
.type port <: symbol
.type proto <: symbol
.type description <: symbol
.type state <: symbol

.decl service(v0: sname, v1: port, v2: proto, v3: description)
.decl active(v0: proto, v1: port, v2: state)
.decl open_port(v0: port, v1: proto, v2: sname)
.decl inv0_service(v0: sname, v1: port, v2: proto, v3: description)
.decl inv0_active(v0: proto, v1: port, v2: state)
.decl M__1(v0: sname, v1: port, v2: proto)
.decl M__2(v0: proto, v1: port)

.input service
.input active
.output open_port

M__1(v0, v1, v2) :- service(v0, v1, v2, v3).
M__2(v0, v1) :- active(v0, v1, v2).
open_port(v0, v1, v2) :- M__1(v2, v0, v1), M__2(v1, v0).