.type sname <: symbol
.type port <: symbol
.type proto <: symbol
.type description <: symbol
.type state <: symbol

.decl service(v0: sname, v1: port, v2: proto, v3: description)
.decl active(v0: proto, v1: port, v2: state)
.decl open_port(v0: port, v1: proto, v2: sname)
.decl inv0_service(v0: sname, v1: port, v2: proto, v3: description)
.decl inv0_active(v0: proto, v1: port, v2: state)
.decl M__1(v0: proto, v1: port)
.decl M__2(v0: sname, v1: port, v2: proto)
.decl M__3(v0: sname, v1: port, v2: proto)
.decl M__4(v0: proto, v1: port)
.decl open_port__0_(v0: port, v1: proto, v2: sname)
.decl open_port__1_(v0: port, v1: proto, v2: sname)
.decl service_update(v0: sname, v1: port, v2: proto, v3: description)
.decl service_sdt_insert(v0: sname, v1: port, v2: proto, v3: description)
.decl service_sdt_delete(v0: sname, v1: port, v2: proto, v3: description)
.decl active_update(v0: proto, v1: port, v2: state)
.decl active_sdt_insert(v0: proto, v1: port, v2: state)
.decl active_sdt_delete(v0: proto, v1: port, v2: state)
.decl open_port_update(v0: port, v1: proto, v2: sname)
.decl open_port_vdt_insert(v0: port, v1: proto, v2: sname)
.decl open_port_vdt_delete(v0: port, v1: proto, v2: sname)
.decl inv0_service_update(v0: sname, v1: port, v2: proto, v3: description)
.decl inv0_service_sdt_insert(v0: sname, v1: port, v2: proto, v3: description)
.decl inv0_service_sdt_delete(v0: sname, v1: port, v2: proto, v3: description)
.decl inv0_service_vdt_insert(v0: sname, v1: port, v2: proto, v3: description)
.decl inv0_service_vdt_delete(v0: sname, v1: port, v2: proto, v3: description)
.decl inv0_active_update(v0: proto, v1: port, v2: state)
.decl inv0_active_sdt_insert(v0: proto, v1: port, v2: state)
.decl inv0_active_sdt_delete(v0: proto, v1: port, v2: state)
.decl inv0_active_vdt_insert(v0: proto, v1: port, v2: state)
.decl inv0_active_vdt_delete(v0: proto, v1: port, v2: state)
.decl M__1_update(v0: proto, v1: port)
.decl M__1_sdt_insert(v0: proto, v1: port)
.decl M__1_sdt_delete(v0: proto, v1: port)
.decl M__1_vdt_insert(v0: proto, v1: port)
.decl M__1_vdt_delete(v0: proto, v1: port)
.decl M__2_update(v0: sname, v1: port, v2: proto)
.decl M__2_sdt_insert(v0: sname, v1: port, v2: proto)
.decl M__2_sdt_delete(v0: sname, v1: port, v2: proto)
.decl M__2_vdt_insert(v0: sname, v1: port, v2: proto)
.decl M__2_vdt_delete(v0: sname, v1: port, v2: proto)
.decl M__3_update(v0: sname, v1: port, v2: proto)
.decl M__3_sdt_insert(v0: sname, v1: port, v2: proto)
.decl M__3_sdt_delete(v0: sname, v1: port, v2: proto)
.decl M__3_vdt_insert(v0: sname, v1: port, v2: proto)
.decl M__3_vdt_delete(v0: sname, v1: port, v2: proto)
.decl M__4_update(v0: proto, v1: port)
.decl M__4_sdt_insert(v0: proto, v1: port)
.decl M__4_sdt_delete(v0: proto, v1: port)
.decl M__4_vdt_insert(v0: proto, v1: port)
.decl M__4_vdt_delete(v0: proto, v1: port)
.decl open_port__0__update(v0: port, v1: proto, v2: sname)
.decl open_port__0__sdt_insert(v0: port, v1: proto, v2: sname)
.decl open_port__0__sdt_delete(v0: port, v1: proto, v2: sname)
.decl open_port__0__vdt_insert(v0: port, v1: proto, v2: sname)
.decl open_port__0__vdt_delete(v0: port, v1: proto, v2: sname)
.decl open_port__1__update(v0: port, v1: proto, v2: sname)
.decl open_port__1__sdt_insert(v0: port, v1: proto, v2: sname)
.decl open_port__1__sdt_delete(v0: port, v1: proto, v2: sname)
.decl open_port__1__vdt_insert(v0: port, v1: proto, v2: sname)
.decl open_port__1__vdt_delete(v0: port, v1: proto, v2: sname)
.decl Au_P_0_M__1_active(v0: state)
.decl Au_P_1_M__1_active(v0: proto, v1: port, v2: state)
.decl Au_P_0_M__2_inv0_service(v0: description)
.decl Au_P_0_M__3_service(v0: description)
.decl Au_P_0_M__4_active(v0: state)
.decl Au_P_1_M__4_active(v0: proto, v1: port, v2: state)
.decl Au_U_open_port_open_port__1_(v0: port, v1: proto, v2: sname)
.decl Au_U_open_port_open_port__0__open_port__1_(v0: port, v1: proto, v2: sname)
.decl Fr__(v0: symbol)
.decl Fv__(v0: symbol)

.input service
.input active
.output service_update
.output active_update
.input open_port_update
.output Fr__
.output Fv__

M__1(v0, v1) :- active(v0, v1, v2).
M__2(v0, v1, v2) :- inv0_service(v0, v1, v2, v3).
M__3(v0, v1, v2) :- service(v0, v1, v2, v3).
M__4(v0, v1) :- active(v0, v1, v2).
inv0_service(v0, v1, v2, v3) :- service(v0, v1, v2, v3), v1 = "448", v2 = "udp".
open_port(v0, v1, v2) :- open_port__0_(v0, v1, v2); open_port__1_(v0, v1, v2).
open_port__0_(v0, v1, v2) :- M__1(v1, v0), M__2(v2, v0, v1).
open_port__1_(v0, v1, v2) :- M__3(v2, v0, v1), M__4(v1, v0).

M__1_vdt_delete(v0, v1) :- M__1(v0, v1), !M__1_update(v0, v1).
M__1_vdt_insert(v0, v1) :- M__1_update(v0, v1), !M__1(v0, v1).
M__2_vdt_delete(v0, v1, v2) :- M__2(v0, v1, v2), !M__2_update(v0, v1, v2).
M__2_vdt_insert(v0, v1, v2) :- M__2_update(v0, v1, v2), !M__2(v0, v1, v2).
M__3_vdt_delete(v0, v1, v2) :- M__3(v0, v1, v2), !M__3_update(v0, v1, v2).
M__3_vdt_insert(v0, v1, v2) :- M__3_update(v0, v1, v2), !M__3(v0, v1, v2).
M__4_vdt_delete(v0, v1) :- M__4(v0, v1), !M__4_update(v0, v1).
M__4_vdt_insert(v0, v1) :- M__4_update(v0, v1), !M__4(v0, v1).
inv0_active_vdt_delete(v0, v1, v2) :- inv0_active(v0, v1, v2), !inv0_active_update(v0, v1, v2).
inv0_active_vdt_insert(v0, v1, v2) :- inv0_active_update(v0, v1, v2), !inv0_active(v0, v1, v2).
inv0_service_vdt_delete(v0, v1, v2, v3) :- inv0_service(v0, v1, v2, v3), !inv0_service_update(v0, v1, v2, v3).
inv0_service_vdt_insert(v0, v1, v2, v3) :- inv0_service_update(v0, v1, v2, v3), !inv0_service(v0, v1, v2, v3).
open_port__0__vdt_delete(v0, v1, v2) :- open_port__0_(v0, v1, v2), !open_port__0__update(v0, v1, v2).
open_port__0__vdt_insert(v0, v1, v2) :- open_port__0__update(v0, v1, v2), !open_port__0_(v0, v1, v2).
open_port__1__vdt_delete(v0, v1, v2) :- open_port__1_(v0, v1, v2), !open_port__1__update(v0, v1, v2).
open_port__1__vdt_insert(v0, v1, v2) :- open_port__1__update(v0, v1, v2), !open_port__1_(v0, v1, v2).
open_port_vdt_delete(v0, v1, v2) :- open_port(v0, v1, v2), !open_port_update(v0, v1, v2).
open_port_vdt_insert(v0, v1, v2) :- open_port_update(v0, v1, v2), !open_port(v0, v1, v2).

M__1_update(v0, v1) :- M__1(v0, v1), !M__1_sdt_delete(v0, v1); M__1_sdt_insert(v0, v1).
M__2_update(v0, v1, v2) :- M__2(v0, v1, v2), !M__2_sdt_delete(v0, v1, v2); M__2_sdt_insert(v0, v1, v2).
M__3_update(v0, v1, v2) :- M__3(v0, v1, v2), !M__3_sdt_delete(v0, v1, v2); M__3_sdt_insert(v0, v1, v2).
M__4_update(v0, v1) :- M__4(v0, v1), !M__4_sdt_delete(v0, v1); M__4_sdt_insert(v0, v1).
active_update(v0, v1, v2) :- active(v0, v1, v2), !active_sdt_delete(v0, v1, v2); active_sdt_insert(v0, v1, v2).
inv0_active_update(v0, v1, v2) :- inv0_active(v0, v1, v2), !inv0_active_sdt_delete(v0, v1, v2); inv0_active_sdt_insert(v0, v1, v2).
inv0_service_update(v0, v1, v2, v3) :- inv0_service(v0, v1, v2, v3), !inv0_service_sdt_delete(v0, v1, v2, v3); inv0_service_sdt_insert(v0, v1, v2, v3).
open_port__0__update(v0, v1, v2) :- open_port__0_(v0, v1, v2), !open_port__0__sdt_delete(v0, v1, v2); open_port__0__sdt_insert(v0, v1, v2).
open_port__1__update(v0, v1, v2) :- open_port__1_(v0, v1, v2), !open_port__1__sdt_delete(v0, v1, v2); open_port__1__sdt_insert(v0, v1, v2).
service_update(v0, v1, v2, v3) :- service(v0, v1, v2, v3), !service_sdt_delete(v0, v1, v2, v3); service_sdt_insert(v0, v1, v2, v3).

Fr__("_rejected_") :- M__1_sdt_delete(v1, v0), M__1_update(v1, v0), M__2_sdt_delete(_, v0, v1), M__2_update(_, v0, v1).
Fr__("_rejected_") :- M__1_sdt_insert(v1, v0), M__1(v1, v0).
Fr__("_rejected_") :- M__2_sdt_insert(_, v0, v1), M__2(_, v0, v1).
Fr__("_rejected_") :- M__3_sdt_delete(_, v0, v1), M__3_update(_, v0, v1), M__4_sdt_delete(v1, v0), M__4_update(v1, v0).
Fr__("_rejected_") :- M__3_sdt_insert(_, v0, v1), M__3(_, v0, v1).
Fr__("_rejected_") :- M__4_sdt_insert(v1, v0), M__4(v1, v0).
Fr__("_rejected_") :- inv0_service(_, _, v2, _), v2 != "udp".
Fr__("_rejected_") :- inv0_service(_, v1, _, _), v1 != "448".
Fr__("_rejected_") :- inv0_service_update(_, _, v2, _), v2 != "udp".
Fr__("_rejected_") :- inv0_service_update(_, v1, _, _), v1 != "448".
Fv__("_valid_") :- !Fr__("_rejected_").

M__1_sdt_delete(v0, v1) :- M__4_sdt_delete(v0, v1), active(v0, v1, _).
M__1_sdt_insert(v0, v1) :- M__4_sdt_insert(v0, v1), Au_P_0_M__4_active(v2), !Au_P_1_M__4_active(v0, v1, _), !active(v0, v1, _).
M__1_sdt_insert(v1, v0) :- open_port__0__vdt_insert(v0, v1, _), !M__1(v1, v0).
M__4_sdt_delete(v1, v0) :- open_port__1__vdt_delete(v0, v1, _), M__4(v1, v0).
M__4_sdt_insert(v1, v0) :- open_port__1__vdt_insert(v0, v1, _), !M__4(v1, v0).
active_sdt_delete(v0, v1, v2) :- M__1_vdt_delete(v0, v1), active(v0, v1, v2).
active_sdt_insert(v0, v1, v2) :- M__1_vdt_insert(v0, v1), Au_P_0_M__1_active(v2), !Au_P_1_M__1_active(v0, v1, _), !active(v0, v1, _).
open_port__0__sdt_insert(v0, v1, v2) :- open_port_vdt_insert(v0, v1, v2), !Au_U_open_port_open_port__1_(v0, v1, v2), !open_port__0_(v0, v1, v2).
open_port__1__sdt_delete(v0, v1, v2) :- open_port_vdt_delete(v0, v1, v2), open_port__1_(v0, v1, v2).
open_port__1__sdt_insert(v0, v1, v2) :- open_port_vdt_insert(v0, v1, v2), !Au_U_open_port_open_port__0__open_port__1_(v0, v1, v2), !open_port__1_(v0, v1, v2).
open_port__1__sdt_insert(v0, v1, v2) :- open_port_vdt_insert(v0, v1, v2), !Au_U_open_port_open_port__1_(v0, v1, v2), !open_port__1_(v0, v1, v2).

Au_P_0_M__1_active("LISTENING").
Au_P_0_M__2_inv0_service("_null_").
Au_P_0_M__3_service("_null_").
Au_P_0_M__4_active("LISTENING").
Au_U_open_port_open_port__1_("110", "tcp", "pop3").
Au_U_open_port_open_port__1_("143", "tcp", "imap").
Au_U_open_port_open_port__1_("501", "udp", "stmf").
Au_U_open_port_open_port__0__open_port__1_("448", "udp", "ddm-ssl").