.type MAKER <: symbol
.type MODEL <: symbol
.type TYPE <: symbol
.type SPEED <: symbol
.type RAM <: symbol
.type HD <: symbol
.type PRICE <: symbol

.decl product(v0: MAKER, v1: MODEL, v2: TYPE)
.decl pc(v0: MODEL, v1: SPEED, v2: RAM, v3: HD, v4: PRICE)
.decl newpc(v0: MAKER, v1: MODEL, v2: SPEED, v3: RAM, v4: HD, v5: PRICE)
.decl M__1(v0: MAKER, v1: MODEL, v2: TYPE)
.decl M__2(v0: MAKER, v1: MODEL)
.decl product_update(v0: MAKER, v1: MODEL, v2: TYPE)
.decl product_sdt_insert(v0: MAKER, v1: MODEL, v2: TYPE)
.decl product_sdt_delete(v0: MAKER, v1: MODEL, v2: TYPE)
.decl pc_update(v0: MODEL, v1: SPEED, v2: RAM, v3: HD, v4: PRICE)
.decl pc_sdt_insert(v0: MODEL, v1: SPEED, v2: RAM, v3: HD, v4: PRICE)
.decl pc_sdt_delete(v0: MODEL, v1: SPEED, v2: RAM, v3: HD, v4: PRICE)
.decl newpc_update(v0: MAKER, v1: MODEL, v2: SPEED, v3: RAM, v4: HD, v5: PRICE)
.decl newpc_vdt_insert(v0: MAKER, v1: MODEL, v2: SPEED, v3: RAM, v4: HD, v5: PRICE)
.decl newpc_vdt_delete(v0: MAKER, v1: MODEL, v2: SPEED, v3: RAM, v4: HD, v5: PRICE)
.decl M__1_update(v0: MAKER, v1: MODEL, v2: TYPE)
.decl M__1_sdt_insert(v0: MAKER, v1: MODEL, v2: TYPE)
.decl M__1_sdt_delete(v0: MAKER, v1: MODEL, v2: TYPE)
.decl M__1_vdt_insert(v0: MAKER, v1: MODEL, v2: TYPE)
.decl M__1_vdt_delete(v0: MAKER, v1: MODEL, v2: TYPE)
.decl M__2_update(v0: MAKER, v1: MODEL)
.decl M__2_sdt_insert(v0: MAKER, v1: MODEL)
.decl M__2_sdt_delete(v0: MAKER, v1: MODEL)
.decl M__2_vdt_insert(v0: MAKER, v1: MODEL)
.decl M__2_vdt_delete(v0: MAKER, v1: MODEL)
.decl Au_P_0_M__2_M__1(v0: TYPE)
.decl Au_P_1_M__2_M__1(v0: MAKER, v1: MODEL, v2: TYPE)
.decl Fr__(v0: symbol)
.decl Fv__(v0: symbol)

.input product
.input pc
.output product_update
.output pc_update
.input newpc_update
.output Fr__
.output Fv__

M__1(v0, v1, v2) :- product(v0, v1, v2), v2 = "pc".
M__2(v0, v1) :- M__1(v0, v1, v2).
newpc(v0, v1, v2, v3, v4, v5) :- M__2(v0, v1), pc(v1, v2, v3, v4, v5).

M__1_vdt_delete(v0, v1, v2) :- M__1(v0, v1, v2), !M__1_update(v0, v1, v2).
M__1_vdt_insert(v0, v1, v2) :- M__1_update(v0, v1, v2), !M__1(v0, v1, v2).
M__2_vdt_delete(v0, v1) :- M__2(v0, v1), !M__2_update(v0, v1).
M__2_vdt_insert(v0, v1) :- M__2_update(v0, v1), !M__2(v0, v1).
newpc_vdt_delete(v0, v1, v2, v3, v4, v5) :- newpc(v0, v1, v2, v3, v4, v5), !newpc_update(v0, v1, v2, v3, v4, v5).
newpc_vdt_insert(v0, v1, v2, v3, v4, v5) :- newpc_update(v0, v1, v2, v3, v4, v5), !newpc(v0, v1, v2, v3, v4, v5).

M__1_update(v0, v1, v2) :- M__1(v0, v1, v2), !M__1_sdt_delete(v0, v1, v2); M__1_sdt_insert(v0, v1, v2).
M__2_update(v0, v1) :- M__2(v0, v1), !M__2_sdt_delete(v0, v1); M__2_sdt_insert(v0, v1).
pc_update(v0, v1, v2, v3, v4) :- pc(v0, v1, v2, v3, v4), !pc_sdt_delete(v0, v1, v2, v3, v4); pc_sdt_insert(v0, v1, v2, v3, v4).
product_update(v0, v1, v2) :- product(v0, v1, v2), !product_sdt_delete(v0, v1, v2); product_sdt_insert(v0, v1, v2).

Fr__("_rejected_") :- M__1(_, _, v2), v2 != "pc".
Fr__("_rejected_") :- M__1_update(_, _, v2), v2 != "pc".
Fr__("_rejected_") :- M__2_sdt_delete(_, v1), M__2_update(_, v1), pc_sdt_delete(v1, _, _, _, _), pc_update(v1, _, _, _, _).
Fr__("_rejected_") :- M__2_sdt_insert(_, v1), M__2(_, v1).
Fr__("_rejected_") :- pc_sdt_insert(v1, _, _, _, _), pc(v1, _, _, _, _).
Fv__("_valid_") :- !Fr__("_rejected_").

M__1_sdt_delete(v0, v1, v2) :- M__2_vdt_delete(v0, v1), M__1(v0, v1, v2).
M__1_sdt_insert(v0, v1, v2) :- M__2_vdt_insert(v0, v1), Au_P_0_M__2_M__1(v2), !Au_P_1_M__2_M__1(v0, v1, _), !M__1(v0, v1, _).
M__1_sdt_insert(v0, v1, v2) :- M__2_vdt_insert(v0, v1), Au_P_1_M__2_M__1(v0, v1, v2), !M__1(v0, v1, _).
M__2_sdt_insert(v0, v1) :- newpc_vdt_insert(v0, v1, _, _, _, _), !M__2(v0, v1).
pc_sdt_delete(v1, v2, v3, v4, v5) :- newpc_vdt_delete(_, v1, v2, v3, v4, v5), pc(v1, v2, v3, v4, v5).
pc_sdt_insert(v1, v2, v3, v4, v5) :- newpc_vdt_insert(_, v1, v2, v3, v4, v5), !pc(v1, v2, v3, v4, v5).
product_sdt_delete(v0, v1, v2) :- M__1_vdt_delete(v0, v1, v2), product(v0, v1, v2).
product_sdt_insert(v0, v1, v2) :- M__1_vdt_insert(v0, v1, v2), !product(v0, v1, v2).

Au_P_0_M__2_M__1("pc").