.type emp_name <: symbol
.type birth_date <: symbol
.type gender <: symbol

.decl male(v0: emp_name, v1: birth_date)
.decl female(v0: emp_name, v1: birth_date)
.decl others(v0: emp_name, v1: birth_date, v2: gender)
.decl residents(v0: emp_name, v1: birth_date, v2: gender)
.decl residents__0_(v0: emp_name, v1: birth_date, v2: gender)
.decl residents__1_(v0: emp_name, v1: birth_date, v2: gender)
.decl residents__2_(v0: emp_name, v1: birth_date, v2: gender)

.input male
.input female
.input others
.output residents

residents(v0, v1, v2) :- residents__1_(v0, v1, v2); residents__2_(v0, v1, v2).
residents__0_(v0, v1, v2) :- male(v0, v1), v2 = "M".
residents__1_(v0, v1, v2) :- female(v0, v1), v2 = "F".
residents__2_(v0, v1, v2) :- others(v0, v1, v2); residents__0_(v0, v1, v2).